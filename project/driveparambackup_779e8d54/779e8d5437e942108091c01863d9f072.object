{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)779e8d54-37e9-4210-8091-c01863d9f072","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)DriveParamBackup","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","bool":"System.Boolean","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)CASE _uiState OF \n\tSTATE_IDLE: \n\t\tIF bExecute THEN \n\t\t\t_uiNextState := STATE_FIND_FILE; \n\t\tEND_IF\n\tSTATE_FIND_FILE: \n\t\tIF _browseForFile.bError THEN \n\t\t\tErrorID := _browseForFile.ErrorID; \n\t\t\tErrorIdent := _browseForFile.ErrorIdent; \n\t\t\tErrorCause :=EN_DRIVE_BACKUP_RESTORE_ERROR.FileBrowseFailed; \n\t\t\t_uiNextState := STATE_ERROR; \n\t\tELSIF _browseForFile.bDone THEN \n\t\t\tIF _browseForFile.bFound AND NOT bOverwrite THEN \n\t\t\t\tErrorCause := EN_DRIVE_BACKUP_RESTORE_ERROR.FileExists; \n\t\t\t\t_uiNextState := STATE_ERROR; \n\t\t\tELSIF _browseForFile.bFound THEN \n\t\t\t\t_uiNextState := STATE_DELETE_FILE; \n\t\t\tELSE \n\t\t\t\t_uiNextState := STATE_REQ; \n\t\t\tEND_IF;  \n\t\tEND_IF\n\tSTATE_DELETE_FILE: \n\t\tIF _dlDeleteNode.Error THEN \n\t\t\tErrorID := _dlDeleteNode.ErrorID; \n\t\t\tErrorIdent := _dlDeleteNode.ErrorIdent; \n\t\t\tErrorCause := EN_DRIVE_BACKUP_RESTORE_ERROR.DeleteFailed; \n\t\tELSIF _dlDeleteNode.Done THEN \n\t\t\t_uiNextState := STATE_REQ; \n\t\tEND_IF\n\tSTATE_REQ: \n\t\tIF _dlCreateNode.Error THEN \n\t\t\t_uiNExtState := STATE_ERROR; \n\t\t\tErrorID := _dlCreateNode.ErrorID;\n\t\t\tErrorIDent := _dlCreateNode.ErrorIdent; \n\t\t\tErrorCause := EN_DRIVE_BACKUP_RESTORE_ERROR.RequestFailed;  \n\t\tELSIF _dlCreateNode.Done THEN \n\t\t\t_uiNextState := STATE_BACKING_UP; \n\t\tEND_IF\n\tSTATE_BACKING_UP: \n\t\tIF _dlReadNode.Error THEN \n\t\t\t_uiNextState := STATE_ERROR; \n\t\t\tErrorID := _dlReadNode.ErrorID;\n\t\t\tErrorIDent := _dlReadNode.ErrorIdent; \n\t\t\tErrorCause := EN_DRIVE_BACKUP_RESTORE_ERROR.ProgressReadFailed;  \n\t\tELSIF _dlReadNode.Done THEN \n\t\t\tIF _enTaskState = comm_datalayer_ProgramTaskState.failed THEN \n\t\t\t\t_uiNextState := STATE_ERROR; \n\t\t\t\tErrorID := _dlReadNode.ErrorID;\n\t\t\t\tErrorIdent := _dlReadNode.ErrorIdent; \n\t\t\t\tErrorCause := EN_DRIVE_BACKUP_RESTORE_ERROR.BackupFailed;  \n\t\t\t\tsFailureInfo := _taskStatus.getProgressInfo(); \n\t\t\tELSIF _enTaskState = comm_datalayer_ProgramTaskState.done THEN \n\t\t\t\t_uiNextState := STATE_DONE; \n\t\t\tELSE\n\t\t\t\t_dlReadNode(Execute := FALSE); \n\t\t\tEND_IF\n\t\tEND_IF\n\tSTATE_DONE, STATE_ERROR: \n\t\tIF NOT bExecute THEN \n\t\t\t_uiNextState := STATE_IDLE; \n\t\tEND_IF\nEND_CASE\n_uiState := _uiNextState; \nCASE _uiState OF \n\tSTATE_IDLE: \n\t\t_dlReadNode.Execute := FALSE; \n\t\t_dlCreateNode.Execute := FALSE; \n\t\t_browseForFile.bExecute := FALSE; \n\t\t_dlDeleteNode.Execute := FALSE; \n\t\tsFailureInfo := 'OK'; \n\t\tenTaskState := comm_datalayer_ProgramTaskState.done; \n\t\tErrorCause := EN_DRIVE_BACKUP_RESTORE_ERROR.OK; \n\t\tuiProgress := 0; \n\t\t\n\tSTATE_FIND_FILE: \n\t\t_browseForFile.sFileName := sFileName; \n\t\t_browseForFile.bExecute := TRUE; \n\t\t\n\tSTATE_DELETE_FILE: \n\t\t_dlDeleteNode.Execute := TRUE; \n\t\t_sDeleteNode :='driveconnect/'; \n\t\t_sDeleteNode := Concat(_sDeleteNode,S_PATH_BACKUPS);\n\t\t_sDeleteNode := Concat(_sDeleteNode,sFileName); \n\t\t\n\tSTATE_REQ: \n\t\t_dlCreateNode.Execute := TRUE; \n\t\t_builder(forceDefaults := TRUE); \n\t\t_sSaveString := CONCAT(S_PATH_BACKUPS,sFileName); \n\t\t_sReqString := CONCAT(S_PATH_DEVICES,sDriveConnectName); \n\t\t_sReqString := CONCAT(_sReqString,'/subdevices/subdevice-'); \n\t\t_sReqString := CONCAT(_sReqString,INT_TO_STRING(iSubDevice)); \n\t\t_sReqString := CONCAT(_sReqString,'/export-parameter'); \n\t\t_uiOffset := _backUpReq.createExportParFile(_builder,_sSaveString,enBackupType);\n \t\t_builder.finish(_uiOffset); \n\t\t_dlBackupReq.SetFlatbuffer(_builder); \n\tSTATE_BACKING_UP: \n\t\t_pRespString := _dlTaskPath.GetData(); \n\t\t_sRespString := _pRespString^; \n\t\t_dlReadNode.Execute := TRUE; \nEND_CASE\n\n_dlCreateNode(NodeName := _sReqString,\n\t\t\t  NodeValueIn := _dlBackupReq, \n\t\t\t  NodeValueOut := _dlTaskPath); \n\t\t\t  \n_dlReadNode(NodeName := _sRespString,\n\t\t\tNodeValue := _dlTaskResp); \n\t\t\t\n_browseForFile(); \n\n_dlDeleteNode(NodeName := _sDeleteNode); \n\nIF _dlReadNode.Done THEN \n\t_taskStatus.getRootAsProgramTask(_dlTaskResp.GetData(),_dlTaskResp.GetSize()); \n\t_enTaskState := _taskStatus.getState(); \n\tuiProgress := _taskStatus.getProgress(); \n\tenTaskState := _enTaskState; \nEND_IF\n\nbActive := _uiState <> STATE_IDLE AND _uiState <> STATE_DONE AND _uiState <> STATE_ERROR; \nbDone := _uiState = STATE_DONE; \nbError := _uiState = STATE_ERROR; ","LineInfoPersistence":"(string)779e8d54-37e9-4210-8091-c01863d9f072_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK DriveParamBackup\nVAR_INPUT\n\tbExecute: BOOL;\n\tbOverwrite: BOOL;\n\tsDriveConnectName: STRING;\n\tiSubDevice: UINT;\n\tsFileName: STRING;\n\tenBackupType: comm_drive_ExportParFile_ParametersType;\nEND_VAR\nVAR_OUTPUT\n\tbDone: BOOL;\n\tbActive: BOOL;\n\tbError: BOOL;\n\tuiProgress: UDINT;\n\tenTaskState: comm_datalayer_ProgramTaskState;\n\tErrorCause: EN_DRIVE_BACKUP_RESTORE_ERROR;\n\tErrorID: CXA_Datalayer.ERROR_CODE;\n\tErrorIdent: CXA_Datalayer.ERROR_STRUCT;\n\tsFailureInfo: STRING;\nEND_VAR\nVAR\n\t_builder: Flatbuffers.FlatBufferBuilder;\n\t_backUpReq: comm_drive_ExportParFile_ExportParFile;\n\t_taskStatus: comm_Datalayer_ProgramTask;\n\t_pRespString: POINTER TO STRING(255);\n\t_sRespString: STRING(255);\n\t_dlCreateNode: CXA_DataLayer.DL_CreateNodeValue;\n\t_dlReadNode: CXA_DataLayer.DL_ReadNodeValue;\n\t_dlBackupReq: CXA_DataLayer.DL_NodeValue;\n\t_dlTaskPath: CXA_DataLayer.DL_NodeValue;\n\t_dlTaskResp: CXA_Datalayer.DL_NodeValue;\n\t_uiState: UINT;\n\t_uiNextState: UINT;\n\t_enTaskState: comm_datalayer_ProgramTaskState;\n\t_sReqString: STRING(255);\n\t_sSaveString: STRING(255);\n\t_uiOffset: UDINT;\n\t_browseForFile: DCBrowseForFile;\n\t_dlDeleteNode: CXA_DataLayer.DL_DeleteNode;\n\t_sDeleteNode: STRING(255);\nEND_VAR\nVAR CONSTANT\n\tSTATE_IDLE: UINT := 0;\n\tSTATE_FIND_FILE: UINT := 1;\n\tSTATE_DELETE_FILE: UINT := 2;\n\tSTATE_REQ: UINT := 3;\n\tSTATE_BACKING_UP: UINT := 4;\n\tSTATE_DONE: UINT := 5;\n\tSTATE_ERROR: UINT := 6;\n\tS_PATH_DEVICES: STRING := 'devices/drives/';\n\tS_PATH_BACKUPS: STRING := 'filesystem/parameterfiles/';\nEND_VAR\n","LineInfoPersistence":"(string)779e8d54-37e9-4210-8091-c01863d9f072_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)175","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}