{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)4fb04879-1f45-456f-9eeb-e61ec5b12d2e","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)MapDriveConnect","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}},{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)edcde9d6-1668-4ae6-a9f8-44a27a848453"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","bool":"System.Boolean","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)_uiNextState := _uiState; \nCASE _uiState OF \n\tIDLE : \n\t\tIF bExecute THEN \n\t\t\t_uiNextState := GET_DEVICES; \n\t\tEND_IF\n\tGET_DEVICES: \n\t\tIF _GetAllDriveConnectDevices.bError THEN \n\t\t\t_uiNextState := ERROR; \n\t\t\tenErrorID := _GetAllDriveConnectDevices.enErrorID; \n\t\t\tstErrorIdent := _GetAllDriveConnectDevices.stErrorIdent; \n\t\t\tuiErrorStep := GET_DEVICES; \n\t\tELSIF _GetAllDriveConnectDevices.bDone THEN \n\t\t\tIF _DeviceList.GetIterator().Next(ADR(_stNode)) THEN \n\t\t\t\t_uiNextState := MAP_DEVICES; \n\t\t\tELSE \n\t\t\t\t_uiNextState := DONE; \n\t\t\tEND_IF\n\t\tEND_IF\n\tMAP_DEVICES: \n\t\tIF _DLReadNodeCtrlx.Error  AND _DLReadNodeIndra.Error THEN \n\t\t\t_uiNextState := ERROR; \n\t\t\tenErrorID := _DLReadNodeCtrlx.ErrorID; \n\t\t\tstErrorIdent := _DLReadNodeCtrlx.ErrorIdent; \n\t\t\tuiErrorStep := MAP_DEVICES; \n\t\tELSIF _DLReadNodeCtrlx.Done AND NOT _DLReadNodeCtrlx.Error THEN \n\t\t\t _uiEcat := StringHexTOUDINT(_sECatAddrCtrlx); \n\t\tELSIF _DLReadNodeIndra.Done AND NOT _DLReadNodeIndra.Error THEN \n\t\t\t _uiEcat := StrDecToUDINT(_sEcatAddrIndra); \n\t\tEND_IF \n\t\tIF  (_DLReadNodeCtrlx.Done AND NOT _DLReadNodeCtrlx.Error) OR (_DLReadNodeIndra.Done AND NOT _DLReadNodeIndra.Error) THEN \n\t\t\t IF (instAxisInfoMap.TryGetInfoFromAddr(_uiEcat,stAxisInfo => _stAxisInfo)) THEN  \n\t\t\t \t_stAxisInfo.sDriveConnectName := _stNode.sNodeName; \n\t\t\t\tIL_StrSplit(ADR(_stNode.arSubDevices[_iSubDevice]),'-',2,FALSE,ADR(_arStrings),SIZEOF(_arStrings));\n\t\t\t \t_stAxisInfo.iDriveConnectSubDevice := TO_UINT(_arStrings[1]^); \n\t\t\t \tinstAxisInfoMap.TryPutInfo(_stAxisInfo.sAxisName,_stAxisInfo,TRUE);\n\t\t\t END_IF \n\t\t\t _iSubDevice := _iSubdevice + 1; \n\t\t\t IF _iSubDevice >= _stNode.uiNumbSubDevices THEN \n\t\t\t\t _iSubDevice := 0; \n\t\t\t\tIF _DeviceList.GetIterator().Next(ADR(_stNode))THEN\n\t\t\t\t\t_DLReadNodeCtrlx(Execute := FALSE); \n\t\t\t\t\t_DLReadNodeIndra(Execute := FALSE); \n\t\t\t\tELSE \n\t\t\t\t\t _uiNextState := DONE; \n\t\t\t\tEND_IF\n\t\t\t ELSE \n\t\t\t\t_DLReadNodeCtrlx(Execute := FALSE); \n\t\t\t\t_DLReadNodeIndra(Execute := FALSE);\n\t\t\t END_IF\n\t\tEND_IF\n\t\t\n\tDONE, ERROR: \n\t\tIF NOT bExecute THEN \n\t\t\t_uiNextState := IDLE; \n\t\tEND_IF\nEND_CASE\n_uiState := _uiNextState;\nCASE _uiState OF \n\tIDLE : \n\t\t_iSubDevice := 0; \n\tGET_DEVICES: \n\t\t;\n\tMAP_DEVICES: \n\t\t_sReadNodeCtrlx := 'devices/drives/'; \n\t\t_sReadNodeCtrlx := CONCAT(_sReadNodeCtrlx,_stNode.sNodeName); \n\t\t_sReadNodeCtrlx := CONCAT(_sReadNodeCtrlx,'/subdevices/'); \n\t\t_sReadNodeCtrlx := CONCAT(_sReadNodeCtrlx, _stNode.arSubDevices[_iSubDevice]); \n\t\t_sReadNodeCtrlx := CONCAT(_sReadNodeCtrlx, _sEcatAddrNodeCtrlX); \n\t\t\n\t\t_sReadNodeIndra := 'devices/drives/'; \n\t\t_sReadNodeIndra := CONCAT(_sReadNodeIndra,_stNode.sNodeName); \n\t\t_sReadNodeIndra := CONCAT(_sReadNodeIndra,'/subdevices/'); \n\t\t_sReadNodeIndra := CONCAT(_sReadNodeIndra, _stNode.arSubDevices[_iSubDevice]); \n\t\t_sReadNodeIndra := CONCAT(_sReadNodeIndra, _sEcatAddrNodeIndra); \n\tDONE, ERROR :\n\t\t; \nEND_CASE \n_GetAllDriveConnectDevices(bExecute := _uiState = GET_DEVICES, \n\t\t\t\t\t\t   iDeviceList => _DeviceList); \n_DLReadNodeCtrlx(Execute := _uiState = MAP_DEVICES,\n\t\t\tNodeName := _sReadNodeCtrlx,\n\t\t\tValue := _sECatAddrCtrlx); \n_DLReadNodeIndra(Execute := _uiState = MAP_DEVICES,\n\t\t\tNodeName := _sReadNodeIndra,\n\t\t\tValue := _sECatAddrIndra); \t\t\t\nbDone := _uiState = DONE; \nbError := _uiState = ERROR; \nbActive := _uiState <> IDLE and _uiState <> ERROR and _uiState <> DONE; \t","LineInfoPersistence":"(string)4fb04879-1f45-456f-9eeb-e61ec5b12d2e_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK MapDriveConnect\nVAR_INPUT\n\tbExecute: BOOL;\nEND_VAR\nVAR_IN_OUT\n\tinstAxisInfoMap: AxisInfoMap;\nEND_VAR\nVAR_OUTPUT\n\tbDone: BOOL;\n\tbActive: BOOL;\n\tbError: BOOL;\n\tenErrorID: CXA_Datalayer.ERROR_CODE;\n\tstErrorIdent: CXA_Datalayer.ERROR_STRUCT;\n\tuiErrorStep: UINT;\nEND_VAR\nVAR\n\t_DeviceList: iList;\n\t_GetAllDriveConnectDevices: GetAllDriveConnectDevices;\n\t_uiState: UINT;\n\t_uiNextState: UINT;\n\t_iSubDevice: UINT;\n\t_stNode: typeDeviceConnectNode;\n\t_DLReadNodeCtrlx: DL_ReadNode;\n\t_DLReadNodeIndra: DL_ReadNode;\n\t_sECatAddrCtrlx: STRING;\n\t_sReadNodeCtrlx: STRING(255);\n\t_stAxisInfo: typeAxisInfo;\n\t_arStrings: ARRAY[0..1] OF POINTER TO STRING(255);\n\t_sECatAddrIndra: STRING(255);\n\t_sReadNodeIndra: STRING(255);\n\t_uiEcat: UDINT;\nEND_VAR\nVAR CONSTANT\n\tIDLE: UINT := 0;\n\tGET_DEVICES: UINT := 1;\n\tMAP_DEVICES: UINT := 2;\n\tDONE: UINT := 3;\n\tERROR: UINT := 4;\n\t_sEcatAddrNodeCtrlX: STRING := '/sercos-idns/S-0-1042.0.0/data';\n\t_sEcatAddrNodeIndra: STRING := '/sercos-idns/P-0-4089.0.4/data';\nEND_VAR\n","LineInfoPersistence":"(string)4fb04879-1f45-456f-9eeb-e61ec5b12d2e_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)131","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}